{"version":3,"sources":["webpack:///sc2.min.js","webpack:///webpack/bootstrap bf315dd0220925a61a00","webpack:///./src/browser.js","webpack:///./src/sc2.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","sc2","window","this","fetch","baseURL","app","callbackURL","scope","init","params","setBaseURL","setApp","setCallbackURL","accessToken","setAccessToken","setScope","removeAccessToken","undefined","getLoginURL","redirectUri","join","encodeURIComponent","send","route","method","body","cb","url","retP","headers","Accept","Content-Type","Authorization","JSON","stringify","then","res","status","Error","json","ret","err","broadcast","operations","me","vote","voter","author","permlink","weight","comment","parentAuthor","parentPermlink","title","jsonMetadata","parent_author","parent_permlink","json_metadata","reblog","account","required_auths","required_posting_auths","follow","follower","following","what","unfollow","unfollower","unfollowing","ignore","claimRewardBalance","rewardSteem","rewardSbd","rewardVests","reward_steem","reward_sbd","reward_vests","revokeToken","updateUserMetadata","metadata","arguments","length","user_metadata","self","bind","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","support","iterable","Symbol","Headers","map","forEach","append","Array","isArray","header","Object","getOwnPropertyNames","consumed","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","i","fromCharCode","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","get","type","rejected","text","decode","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","Request","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","ok","statusText","e","viewClasses","obj","DataView","isView","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","polyfill"],"mappings":"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","file":"sc2.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t/* eslint-env browser */\n\t\n\tvar sc2 = __webpack_require__(1);\n\t\n\tif (typeof window !== 'undefined') {\n\t  window.sc2 = sc2;\n\t}\n\t\n\tif (typeof global !== 'undefined') {\n\t  global.sc2 = sc2;\n\t}\n\t\n\texports = module.exports = sc2;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar fetch = __webpack_require__(2);\n\t\n\tvar sc2 = {\n\t  baseURL: 'https://v2.steemconnect.com',\n\t  app: '',\n\t  callbackURL: '',\n\t  scope: []\n\t};\n\t\n\tsc2.init = function (params) {\n\t  params.baseURL && sc2.setBaseURL(params.baseURL);\n\t  params.app && sc2.setApp(params.app);\n\t  params.callbackURL && sc2.setCallbackURL(params.callbackURL);\n\t  params.accessToken && sc2.setAccessToken(params.accessToken);\n\t  params.scope && sc2.setScope(params.scope);\n\t};\n\t\n\tsc2.setBaseURL = function (baseURL) {\n\t  return sc2.baseURL = baseURL;\n\t};\n\tsc2.setApp = function (app) {\n\t  return sc2.app = app;\n\t};\n\tsc2.setCallbackURL = function (callbackURL) {\n\t  return sc2.callbackURL = callbackURL;\n\t};\n\tsc2.setAccessToken = function (accessToken) {\n\t  return sc2.accessToken = accessToken;\n\t};\n\tsc2.removeAccessToken = function () {\n\t  return sc2.accessToken = undefined;\n\t};\n\tsc2.setScope = function (scope) {\n\t  return sc2.scope = scope;\n\t};\n\t\n\tsc2.getLoginURL = function (callbackURL) {\n\t  var redirectUri = callbackURL || sc2.callbackURL;\n\t  var scope = sc2.scope ? '&scope=' + sc2.scope.join(',') : '';\n\t  return sc2.baseURL + '/oauth2/authorize?client_id=' + sc2.app + '&redirect_uri=' + encodeURIComponent(redirectUri) + scope;\n\t};\n\t\n\tsc2.send = function (route, method, body, cb) {\n\t  var url = sc2.baseURL + '/api/' + route;\n\t  var retP = fetch(url, {\n\t    method: method,\n\t    headers: {\n\t      'Accept': 'application/json, text/plain, */*',\n\t      'Content-Type': 'application/json',\n\t      Authorization: sc2.accessToken\n\t    },\n\t    body: JSON.stringify(body)\n\t  }).then(function (res) {\n\t    if (res.status >= 400) {\n\t      throw new Error('SteemConnect API call failed with ' + res.status);\n\t    }\n\t    return res.json();\n\t  });\n\t\n\t  if (!cb) return retP;\n\t\n\t  return retP.then(function (ret) {\n\t    cb(null, ret);\n\t  }, function (err) {\n\t    cb(err);\n\t  });\n\t};\n\t\n\tsc2.broadcast = function (operations, cb) {\n\t  return sc2.send('broadcast', 'POST', { operations: operations }, cb);\n\t};\n\tsc2.me = function (cb) {\n\t  return sc2.send('me', 'POST', {}, cb);\n\t};\n\t\n\tsc2.vote = function (voter, author, permlink, weight, cb) {\n\t  var params = {\n\t    voter: voter,\n\t    author: author,\n\t    permlink: permlink,\n\t    weight: weight\n\t  };\n\t  return sc2.broadcast([['vote', params]], cb);\n\t};\n\t\n\tsc2.comment = function (parentAuthor, parentPermlink, author, permlink, title, body, jsonMetadata, cb) {\n\t  var params = {\n\t    parent_author: parentAuthor,\n\t    parent_permlink: parentPermlink,\n\t    author: author,\n\t    permlink: permlink,\n\t    title: title,\n\t    body: body,\n\t    json_metadata: JSON.stringify(jsonMetadata)\n\t  };\n\t  return sc2.broadcast([['comment', params]], cb);\n\t};\n\t\n\tsc2.reblog = function (account, author, permlink, cb) {\n\t  var params = {\n\t    required_auths: [],\n\t    required_posting_auths: [account],\n\t    id: 'follow',\n\t    json: JSON.stringify(['reblog', {\n\t      account: account,\n\t      author: author,\n\t      permlink: permlink\n\t    }])\n\t  };\n\t  return sc2.broadcast([['custom_json', params]], cb);\n\t};\n\t\n\tsc2.follow = function (follower, following, cb) {\n\t  var params = {\n\t    required_auths: [],\n\t    required_posting_auths: [follower],\n\t    id: 'follow',\n\t    json: JSON.stringify(['follow', { follower: follower, following: following, what: ['blog'] }])\n\t  };\n\t  return sc2.broadcast([['custom_json', params]], cb);\n\t};\n\t\n\tsc2.unfollow = function (unfollower, unfollowing, cb) {\n\t  var params = {\n\t    required_auths: [],\n\t    required_posting_auths: [unfollower],\n\t    id: 'follow',\n\t    json: JSON.stringify(['follow', { follower: unfollower, following: unfollowing, what: [] }])\n\t  };\n\t  return sc2.broadcast([['custom_json', params]], cb);\n\t};\n\t\n\tsc2.ignore = function (follower, following, cb) {\n\t  var params = {\n\t    required_auths: [],\n\t    required_posting_auths: [follower],\n\t    id: 'follow',\n\t    json: JSON.stringify(['follow', { follower: follower, following: following, what: ['ignore'] }])\n\t  };\n\t  return sc2.broadcast([['custom_json', params]], cb);\n\t};\n\t\n\tsc2.claimRewardBalance = function (account, rewardSteem, rewardSbd, rewardVests, cb) {\n\t  var params = {\n\t    account: account,\n\t    reward_steem: rewardSteem,\n\t    reward_sbd: rewardSbd,\n\t    reward_vests: rewardVests\n\t  };\n\t  return sc2.broadcast([['claim_reward_balance', params]], cb);\n\t};\n\t\n\tsc2.revokeToken = function (cb) {\n\t  var url = sc2.baseURL + '/api/oauth2/token/revoke';\n\t  var retP = fetch(url, {\n\t    method: 'POST',\n\t    headers: {\n\t      'Accept': 'application/json, text/plain, */*',\n\t      'Content-Type': 'application/json',\n\t      Authorization: sc2.accessToken\n\t    }\n\t  }).then(function (res) {\n\t    if (res.status >= 400) {\n\t      throw new Error('SteemConnect API call failed with ' + res.status);\n\t    }\n\t    return res.json();\n\t  });\n\t  return retP.then(function (ret) {\n\t    sc2.removeAccessToken();\n\t    cb(null, ret);\n\t  }, function (err) {\n\t    cb(err);\n\t  });\n\t};\n\t\n\tsc2.updateUserMetadata = function () {\n\t  var metadata = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t  var cb = arguments[1];\n\t\n\t  return sc2.send('me', 'PUT', { user_metadata: metadata }, cb);\n\t};\n\t\n\texports = module.exports = sc2;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(3);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sc2.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bf315dd0220925a61a00","/* eslint-env browser */\n\nconst sc2 = require('./sc2');\n\nif (typeof window !== 'undefined') {\n  window.sc2 = sc2;\n}\n\nif (typeof global !== 'undefined') {\n  global.sc2 = sc2;\n}\n\nexports = module.exports = sc2;\n\n\n\n// WEBPACK FOOTER //\n// ./src/browser.js","const fetch = require('isomorphic-fetch');\n\nconst sc2 = {\n  baseURL: 'https://v2.steemconnect.com',\n  app: '',\n  callbackURL: '',\n  scope: []\n};\n\nsc2.init = (params) => {\n  params.baseURL && sc2.setBaseURL(params.baseURL);\n  params.app && sc2.setApp(params.app);\n  params.callbackURL && sc2.setCallbackURL(params.callbackURL);\n  params.accessToken && sc2.setAccessToken(params.accessToken);\n  params.scope && sc2.setScope(params.scope);\n};\n\nsc2.setBaseURL = (baseURL) => sc2.baseURL = baseURL;\nsc2.setApp = (app) => sc2.app = app;\nsc2.setCallbackURL = (callbackURL) => sc2.callbackURL = callbackURL;\nsc2.setAccessToken = (accessToken) => sc2.accessToken = accessToken;\nsc2.removeAccessToken = () => sc2.accessToken = undefined;\nsc2.setScope = (scope) => sc2.scope = scope;\n\nsc2.getLoginURL = (callbackURL) => {\n  const redirectUri = callbackURL || sc2.callbackURL;\n  const scope = sc2.scope ? `&scope=${sc2.scope.join(',')}` : '';\n  return `${sc2.baseURL}/oauth2/authorize?client_id=${sc2.app}&redirect_uri=${encodeURIComponent(redirectUri)}${scope}`;\n};\n\nsc2.send = (route, method, body, cb) => {\n  const url = `${sc2.baseURL}/api/${route}`;\n  const retP = fetch(url, {\n    method: method,\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json',\n      Authorization: sc2.accessToken,\n    },\n    body: JSON.stringify(body)\n  }).then((res) => {\n    if (res.status >= 400) {\n      throw new Error(`SteemConnect API call failed with ${res.status}`);\n    }\n    return res.json();\n  });\n\n  if (!cb) return retP;\n\n  return retP.then((ret) => {\n    cb(null, ret);\n  }, (err) => {\n    cb(err);\n  });\n};\n\nsc2.broadcast = (operations, cb) => sc2.send('broadcast', 'POST', { operations }, cb);\nsc2.me = (cb) => sc2.send('me', 'POST', {}, cb);\n\nsc2.vote = (voter, author, permlink, weight, cb) => {\n  const params = {\n    voter,\n    author,\n    permlink,\n    weight,\n  };\n  return sc2.broadcast([['vote', params]], cb);\n};\n\nsc2.comment = (parentAuthor, parentPermlink, author, permlink, title, body, jsonMetadata, cb) => {\n  const params = {\n    parent_author: parentAuthor,\n    parent_permlink: parentPermlink,\n    author,\n    permlink,\n    title,\n    body,\n    json_metadata: JSON.stringify(jsonMetadata),\n  };\n  return sc2.broadcast([['comment', params]], cb);\n};\n\nsc2.reblog = (account, author, permlink, cb) => {\n  const params = {\n    required_auths: [],\n    required_posting_auths: [account],\n    id: 'follow',\n    json: JSON.stringify([\n      'reblog', {\n        account,\n        author,\n        permlink,\n      }]),\n  };\n  return sc2.broadcast([['custom_json', params]], cb);\n};\n\nsc2.follow = (follower, following, cb) => {\n  const params = {\n    required_auths: [],\n    required_posting_auths: [follower],\n    id: 'follow',\n    json: JSON.stringify(['follow', { follower, following, what: ['blog'] }]),\n  };\n  return sc2.broadcast([['custom_json', params]], cb);\n};\n\nsc2.unfollow = (unfollower, unfollowing, cb) => {\n  const params = {\n    required_auths: [],\n    required_posting_auths: [unfollower],\n    id: 'follow',\n    json: JSON.stringify(['follow', { follower: unfollower, following: unfollowing, what: [] }]),\n  };\n  return sc2.broadcast([['custom_json', params]], cb);\n};\n\nsc2.ignore = (follower, following, cb) => {\n  const params = {\n    required_auths: [],\n    required_posting_auths: [follower],\n    id: 'follow',\n    json: JSON.stringify(['follow', { follower, following, what: ['ignore'] }]),\n  };\n  return sc2.broadcast([['custom_json', params]], cb);\n};\n\nsc2.claimRewardBalance = (account, rewardSteem, rewardSbd, rewardVests, cb) => {\n  const params = {\n    account,\n    reward_steem: rewardSteem,\n    reward_sbd: rewardSbd,\n    reward_vests: rewardVests,\n  };\n  return sc2.broadcast([['claim_reward_balance', params]], cb);\n};\n\nsc2.revokeToken = (cb) => {\n  const url = `${sc2.baseURL}/api/oauth2/token/revoke`;\n  const retP = fetch(url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json',\n      Authorization: sc2.accessToken,\n    },\n  }).then((res) => {\n    if (res.status >= 400) {\n      throw new Error(`SteemConnect API call failed with ${res.status}`);\n    }\n    return res.json();\n  });\n  return retP.then((ret) => {\n    sc2.removeAccessToken();\n    cb(null, ret);\n  }, (err) => {\n    cb(err);\n  });\n};\n\nsc2.updateUserMetadata = (metadata = {}, cb) => {\n  return sc2.send('me', 'PUT', { user_metadata: metadata }, cb);\n};\n\nexports = module.exports = sc2;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sc2.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 2\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}