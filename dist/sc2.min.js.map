{"version":3,"sources":["webpack:///sc2.min.js","webpack:///webpack/bootstrap b43ce9b91bc80c9be6cd","webpack:///./src/browser.js","webpack:///./src/sc2.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","sc2","window","this","fetch","baseURL","app","callbackURL","init","params","setBaseURL","setApp","setCallbackURL","accessToken","setAccessToken","getLoginURL","redirectUri","encodeURIComponent","send","route","body","cb","url","retP","method","headers","Accept","Content-Type","Authorization","JSON","stringify","then","res","status","Error","json","ret","err","broadcast","operations","me","vote","voter","author","permlink","weight","comment","parentAuthor","parentPermlink","title","jsonMetadata","parent_author","parent_permlink","json_metadata","self","bind","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","map","forEach","append","Array","isArray","header","Object","getOwnPropertyNames","consumed","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","get","type","rejected","text","decode","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","Request","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","ok","statusText","e","viewClasses","obj","DataView","isView","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","polyfill"],"mappings":"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","file":"sc2.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t/* eslint-env browser */\n\t\n\tvar sc2 = __webpack_require__(1);\n\t\n\tif (typeof window !== 'undefined') {\n\t  window.sc2 = sc2;\n\t}\n\t\n\tif (typeof global !== 'undefined') {\n\t  global.sc2 = sc2;\n\t}\n\t\n\texports = module.exports = sc2;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar fetch = __webpack_require__(2);\n\t\n\tvar sc2 = {\n\t  baseURL: 'https://v2.steemconnect.com',\n\t  app: '',\n\t  callbackURL: ''\n\t};\n\t\n\tsc2.init = function (params) {\n\t  params.baseURL && sc2.setBaseURL(params.baseURL);\n\t  params.app && sc2.setApp(params.app);\n\t  params.callbackURL && sc2.setCallbackURL(params.callbackURL);\n\t  params.accessToken && sc2.setAccessToken(params.accessToken);\n\t};\n\t\n\tsc2.setBaseURL = function (baseURL) {\n\t  return sc2.baseURL = baseURL;\n\t};\n\tsc2.setApp = function (app) {\n\t  return sc2.app = app;\n\t};\n\tsc2.setCallbackURL = function (callbackURL) {\n\t  return sc2.callbackURL = callbackURL;\n\t};\n\tsc2.setAccessToken = function (accessToken) {\n\t  return sc2.accessToken = accessToken;\n\t};\n\t\n\tsc2.getLoginURL = function (callbackURL) {\n\t  var redirectUri = callbackURL || sc2.callbackURL;\n\t  return sc2.baseURL + '/oauth2/authorize?client_id=' + sc2.app + '&redirect_uri=' + encodeURIComponent(redirectUri);\n\t};\n\t\n\tsc2.send = function (route, body, cb) {\n\t  var url = sc2.baseURL + '/api/' + route;\n\t  var retP = fetch(url, {\n\t    method: 'POST',\n\t    headers: {\n\t      'Accept': 'application/json, text/plain, */*',\n\t      'Content-Type': 'application/json',\n\t      Authorization: sc2.accessToken\n\t    },\n\t    body: JSON.stringify(body)\n\t  }).then(function (res) {\n\t    if (res.status >= 400) {\n\t      throw new Error('SteemConnect API call failed with ' + res.status);\n\t    }\n\t    return res.json();\n\t  });\n\t\n\t  if (!cb) return retP;\n\t\n\t  return retP.then(function (ret) {\n\t    cb(null, ret);\n\t  }, function (err) {\n\t    cb(err);\n\t  });\n\t};\n\t\n\tsc2.broadcast = function (operations, cb) {\n\t  return sc2.send('broadcast', { operations: operations }, cb);\n\t};\n\tsc2.me = function (cb) {\n\t  return sc2.send('me', {}, cb);\n\t};\n\t\n\tsc2.vote = function (voter, author, permlink, weight, cb) {\n\t  var params = {\n\t    voter: voter,\n\t    author: author,\n\t    permlink: permlink,\n\t    weight: weight\n\t  };\n\t  return sc2.broadcast([['vote', params]], cb);\n\t};\n\t\n\tsc2.comment = function (parentAuthor, parentPermlink, author, permlink, title, body, jsonMetadata, cb) {\n\t  var params = {\n\t    parent_author: parentAuthor,\n\t    parent_permlink: parentPermlink,\n\t    author: author,\n\t    permlink: permlink,\n\t    title: title,\n\t    body: body,\n\t    json_metadata: jsonMetadata\n\t  };\n\t  return sc2.broadcast([['comment', params]], cb);\n\t};\n\t\n\texports = module.exports = sc2;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(3);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sc2.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b43ce9b91bc80c9be6cd","/* eslint-env browser */\n\nconst sc2 = require('./sc2');\n\nif (typeof window !== 'undefined') {\n  window.sc2 = sc2;\n}\n\nif (typeof global !== 'undefined') {\n  global.sc2 = sc2;\n}\n\nexports = module.exports = sc2;\n\n\n\n// WEBPACK FOOTER //\n// ./src/browser.js","const fetch = require('isomorphic-fetch');\n\nconst sc2 = {\n  baseURL: 'https://v2.steemconnect.com',\n  app: '',\n  callbackURL: '',\n};\n\nsc2.init = (params) => {\n  params.baseURL && sc2.setBaseURL(params.baseURL);\n  params.app && sc2.setApp(params.app);\n  params.callbackURL && sc2.setCallbackURL(params.callbackURL);\n  params.accessToken && sc2.setAccessToken(params.accessToken);\n};\n\nsc2.setBaseURL = (baseURL) => sc2.baseURL = baseURL;\nsc2.setApp = (app) => sc2.app = app;\nsc2.setCallbackURL = (callbackURL) => sc2.callbackURL = callbackURL;\nsc2.setAccessToken = (accessToken) => sc2.accessToken = accessToken;\n\nsc2.getLoginURL = (callbackURL) => {\n  const redirectUri = callbackURL || sc2.callbackURL;\n  return `${sc2.baseURL}/oauth2/authorize?client_id=${sc2.app}&redirect_uri=${encodeURIComponent(redirectUri)}`;\n};\n\nsc2.send = (route, body, cb) => {\n  const url = `${sc2.baseURL}/api/${route}`;\n  const retP = fetch(url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json',\n      Authorization: sc2.accessToken,\n    },\n    body: JSON.stringify(body)\n  }).then((res) => {\n    if (res.status >= 400) {\n      throw new Error(`SteemConnect API call failed with ${res.status}`);\n    }\n    return res.json();\n  });\n\n  if (!cb) return retP;\n\n  return retP.then((ret) => {\n    cb(null, ret);\n  }, (err) => {\n    cb(err);\n  });\n};\n\nsc2.broadcast = (operations, cb) => sc2.send('broadcast', { operations }, cb);\nsc2.me = (cb) => sc2.send('me', {}, cb);\n\nsc2.vote = (voter, author, permlink, weight, cb) => {\n  const params = {\n    voter,\n    author,\n    permlink,\n    weight,\n  };\n  return sc2.broadcast([['vote', params]], cb);\n};\n\nsc2.comment = (parentAuthor, parentPermlink, author, permlink, title, body, jsonMetadata, cb) => {\n  const params = {\n    parent_author: parentAuthor,\n    parent_permlink: parentPermlink,\n    author,\n    permlink,\n    title,\n    body,\n    json_metadata: jsonMetadata,\n  };\n  return sc2.broadcast([['comment', params]], cb);\n};\n\nexports = module.exports = sc2;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sc2.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 2\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}